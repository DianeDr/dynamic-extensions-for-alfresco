{"name":"Dynamic-extensions-for-alfresco","tagline":"Rapid development of Alfresco repository extensions in Java. Deploy your code in seconds, not minutes. Life is too short for endless server restarts.","body":"Dynamic Extensions for Alfresco\r\n===============================\r\n\r\n[![Build Status](https://travis-ci.org/laurentvdl/dynamic-extensions-for-alfresco.svg)](https://travis-ci.org/laurentvdl/dynamic-extensions-for-alfresco)\r\n\r\nRapid development of Alfresco repository extensions in Java. Deploy your code in seconds, not minutes. Life is too short for endless server restarts.\r\n\r\nDynamic Extensions adds an OSGi container to the Alfresco repository, enabling live deployment of Java code, with no need to restart the server.\r\nAlfresco itself is not \"OSGi-fied\" in any way; the OSGi container runs on top of the core Alfresco platform.\r\n\r\nInstalling Dynamic Extensions\r\n-----------------------------\r\n\r\nDynamic Extensions is distributed as an Alfresco Module Package (AMP).\r\n\r\n* Download the latest <a href=\"https://github.com/laurentvdl/dynamic-extensions-for-alfresco/releases\">Dynamic Extensions AMP</a>.\r\n* Use the <a href=\"http://docs.alfresco.com/4.0/index.jsp?topic=%2Fcom.alfresco.enterprise.doc%2Ftasks%2Famp-install.html\">Module Management Tool</a> to install the AMP in the Alfresco repository of your choosing.\r\n* After restarting Alfresco, open the Control Panel: <a href=\"http://localhost:8080/alfresco/service/dynamic-extensions/\">http://localhost:8080/alfresco/service/dynamic-extensions/</a>.\r\n* Accessing the Control Panel requires an admin account.\r\n\r\nSupported Alfresco versions\r\n---------------------------\r\n\r\nDynamic Extensions is developed and tested against:\r\n\r\n* Alfresco Enterprise 4.1\r\n* Alfresco Enterprise 4.2\r\n* Alfresco Community 5.0\r\n\r\nDynamic Extensions is also known to work on:\r\n\r\n* Alfresco Enterprise 3.4\r\n* Alfresco Enterprise 4.0\r\n* Alfresco Community 4.0\r\n* Alfresco Community 4.2\r\n\r\nExample extension code\r\n----------------------\r\n\r\nThis example Web Script examines a node and passes information to a Freemarker template:\r\n```java\r\n@Component\r\n@WebScript\r\npublic ExampleWebScript {\r\n\r\n  @Autowired\r\n  private NodeService nodeService;\r\n  \r\n  @Uri(\"/show-node\")\r\n  // Example: http://localhost/alfresco/service/show-node?nodeRef=workspace://SpacesStore/12345\r\n  public Map<String, Object> displayNodeName(@RequestParam NodeRef nodeRef) {\r\n    Map<String, Object> model = new HashMap<String, Object>();\r\n    model.put(\"properties\", nodeService.getProperties(nodeRef));    \r\n    return model; // Model is passed to Freemarker template.\r\n  }\r\n}\r\n```\r\n\r\nNote that this is an _annotation Web Script_. These types of Web Script are configured through Java annotations instead of `*.desc.xml` descriptors. Annotation Web Scripts are similar to Spring MVC's annotation-based controllers.\r\n\r\nHere's the accompanying Freemarker template fragment:\r\n\r\n```html\r\n<table>\r\n  <#list properties?keys as name>    \r\n    <tr>\r\n      <th>${name}</th>\r\n      <td>${properties[name]!''}</td>\r\n    </tr>\r\n  </#list>\r\n</table>\r\n```\r\n\r\nThis is all the code that is required; there's no need for Spring XML config or Web Script XML descriptors. Hot-reloading and reducing configuration overhead are not particularly novel concepts in the Java development world at large. Essentially, Dynamic Extensions modernizes the development of Alfresco repository extensions.\r\n\r\nThe example above may be trivial, but the point is that, behind the scenes, services are still wired together through Spring and handled by the Web Script framework. Conceptually there is no real difference between a Dynamic Extension and a regular Alfresco extension. There's just less overhead and more convenience.\r\n\r\nCreating your own Alfresco extensions\r\n-------------------------------------\r\n\r\nThe <a href=\"https://github.com/laurentvdl/example-dynamic-extension\">example Dynamic Extension</a> provides a good starting point for creating your own extensions.\r\n\r\nClone the example repo and explore it. Here are some pointers to get you going:\r\n\r\n* Annotation-based Web Scripts: <a href=\"https://github.com/laurentvdl/example-dynamic-extension/blob/master/src/main/java/com/github/dynamicextensionsalfresco/examples/CategoriesWebScript.java\">First example</a> and <a href=\"https://github.com/laurentvdl/example-dynamic-extension/blob/master/src/main/java/com/github/dynamicextensionsalfresco/examples/HelloWebScript.java\">another example</a>.\r\n* <a href=\"https://github.com/laurentvdl/example-dynamic-extension/blob/master/src/main/java/com/github/dynamicextensionsalfresco/examples/ExampleActions.java\">Annotation-based Action example</a >  and a <a href=\"https://github.com/laurentvdl/example-dynamic-extension/blob/master/src/main/java/com/github/dynamicextensionsalfresco/examples/SetDescriptionWebScript.java\">Web Script</a> that invokes the action.\r\n* <a href=\"https://github.com/laurentvdl/example-dynamic-extension/blob/master/src/main/java/com/github/dynamicextensionsalfresco/examples/ExampleBehaviour.java\">Annotation-based Behaviour example</a>.\r\n* <a href=\"https://github.com/laurentvdl/example-dynamic-extension/tree/master/src/main/java/com/github/dynamicextensionsalfresco/examples\">All examples</a>.\r\n\r\nSee also: <a href=\"https://github.com/laurentvdl/dynamic-extensions-for-alfresco/wiki/Building-Alfresco-repository-extensions-for-Dynamic-Extensions-using-Gradle\">Gradle plugin for building your own repository extensions</a>\r\n\r\nBarcelona 2013 presentation\r\n---------------------------\r\n\r\n<a href=\"http://summit.alfresco.com/barcelona/sessions/life-too-short-endless-restarts\">One hour presentation on using and exploring Dynamic Extensions for Alfresco</a>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}